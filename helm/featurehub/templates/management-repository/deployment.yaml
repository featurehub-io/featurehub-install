{{- if .Values.managementRepository.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "featurehub.managementRepository.name" . }}
  labels:
    {{- include "featurehub.managementRepository.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.managementRepository.replicaCount }}
  {{- with .Values.managementRepository.strategy }}
  strategy:
    {{- . | toYaml | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "featurehub.managementRepository.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/management-repository-env: {{ include (print $.Template.BasePath "/management-repository/configmap-env.yaml") . | sha256sum }}

        {{- if and .Values.managementRepository.envAsApplicationProperties .Values.managementRepository.environmentVars }}
        checksum/management-repository-app-config: {{ include (print $.Template.BasePath "/management-repository/configmap-app-config.yaml") . | sha256sum }}
        {{- end }}

        {{- if .Values.global.environmentVars }}
        checksum/global-common-env: {{ include (print $.Template.BasePath "/common/configmap-global-common-env.yaml") . | sha256sum }}
        {{- end }}

        {{- if and .Values.global.envAsApplicationProperties .Values.global.environmentVars }}
        checksum/global-common-config: {{ include (print $.Template.BasePath "/common/configmap-global-common-config.yaml") . | sha256sum }}
        {{- end }}

        {{- if gt ( len .Values.global.extraCommonConfigFiles ) 0 }}
        checksum/global-common-config-extra: {{ include (print $.Template.BasePath "/common/configmap-global-common-config-extra.yaml") . | sha256sum }}
        {{- end }}

        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value}}
        {{- end }}
      labels:
        {{- include "featurehub.managementRepository.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "featurehub.managementRepository.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "featurehub.managementRepository.name" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.managementRepository.image.repository }}:{{ .Values.managementRepository.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          {{- if or (.Values.global.environmentVars) (.Values.managementRepository.environmentVars) (.Values.managementRepository.envFromSecret) }}
          envFrom:
            {{- if .Values.global.environmentVars }}
            - configMapRef:
                name: {{ include "featurehub.fullname" . }}-global-common-env
            {{- end }}
            {{- if .Values.managementRepository.environmentVars }}
            - configMapRef:
                name: {{ include "featurehub.fullname" . }}-management-repository-env
            {{- end }}
            {{- if .Values.managementRepository.envFromSecret }}
            - secretRef:
                name: {{ .Values.managementRepository.envFromSecret }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8085
              protocol: TCP
            - name: metrics
              containerPort: 8701
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 2
            timeoutSeconds: 3
            httpGet:
              path: /health/liveness
              port: metrics
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 20
            successThreshold: 2
            failureThreshold: 2
            timeoutSeconds: 3
            httpGet:
              path: /health/readiness
              port: metrics
          volumeMounts:
          {{- if gt ( len .Values.global.extraCommonConfigFiles ) 0 -}}
          {{- range $cm := .Values.global.extraCommonConfigFiles }}
            - name: {{ $cm.configMapSuffix }}
              mountPath: "/etc/common-config/{{ $cm.fileName }}"
              subPath: {{ $cm.fileName | quote }}
          {{- end }}
          {{- end }}
          {{- if and .Values.global.envAsApplicationProperties .Values.global.environmentVars }}
            - mountPath: /etc/common-config/common.properties
              name: common-config
              subPath: common.properties
          {{- else }}
            - mountPath: /etc/common-config
              name: common-config-empty
          {{- end }}
          {{- if and .Values.managementRepository.envAsApplicationProperties .Values.managementRepository.environmentVars }}
            - mountPath: /etc/app-config/application.properties
              name: app-config
              subPath: application.properties
          {{- else }}
            - mountPath: /etc/app-config
              name: app-config-empty
          {{- end }}
          {{- if .Values.managementRepository.extraVolumeMounts }}
            {{- toYaml .Values.managementRepository.extraVolumeMounts | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.managementRepository.resources | nindent 12 }}
      {{- with .Values.managementRepository.extraContainers }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if gt ( len .Values.global.extraCommonConfigFiles ) 0 -}}
      {{- range $cm := .Values.global.extraCommonConfigFiles }}
      {{- with $ }}
        - name: {{ $cm.configMapSuffix }}
          configMap:
            name: {{ include "featurehub.fullname" . }}-global-extra-{{ $cm.configMapSuffix }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- if and .Values.global.envAsApplicationProperties .Values.global.environmentVars }}
        - name: common-config
          configMap:
            name: {{ include "featurehub.fullname" . }}-global-common-config
            items:
              - key: common.properties
                path: common.properties
      {{- else }}
        - name: common-config-empty
          emptyDir: {}
      {{- end }}
      {{- if and .Values.managementRepository.envAsApplicationProperties .Values.managementRepository.environmentVars }}
        - name: app-config
          configMap:
            name: {{ include "featurehub.fullname" . }}-management-repository-app-config
            items:
              - key: application.properties
                path: application.properties
      {{- else }}
        - name: app-config-empty
          emptyDir: {}
      {{- end }}
      {{- if .Values.managementRepository.extraVolumes }}
        {{- toYaml .Values.managementRepository.extraVolumes | nindent 8 }}
      {{- end }}
      {{- with .Values.managementRepository.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.managementRepository.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.managementRepository.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
