# Default values for featurehub.
# This is a YAML-formatted file.

# This chart assumes you have a NATS server already running in your cluster


version: 1.5.3
pullPolicy: IfNotPresent
managementRepository:
  name: "management_repository"
  replicaCount: 1
  image:
    repository: featurehub/mr
    tag: 1.5.3
  shutdownGracePeriodInSeconds: 10
  registrationUrl: http://localhost/register-url?token=%s
  portfolioGroupAdminSuffix: "Administrators"
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
  #   cpu: 100m
  #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

edge:
  name: "edge"
  replicaCount: 2
  image:
    repository: featurehub/edge
    tag: 1.5.3
  shutdownGracePeriodInSeconds: 10
  # 30 seconds before they get kicked off and have to connect again
  sseClientConnectTimeout: 30
  clientUpdateThreadPoolSize: 30
  natsListenerThreadPoolSize: 30
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

dacha:
  name: "dacha"
  replicaCount: 2
  image:
    repository: featurehub/dacha
    tag: 1.5.3
  cacheThreadPoolSize: 15
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

# this is not production usable, NATS has many production level k8s cluster
# examples you can use out of the box, including helm charts.
nats:
  enabled: true
  # these urls should be comma separated if you have more than one of them
  serverUrls: nats://nats:4222

# this is not intended for any kind of production use, please don't use it as such
postgres:
  enabled: true

db:
  url: jdbc:postgresql://postgres:5432/featurehub
  password: featurehub
  username: featurehub
  connections: 3

#image:
#  repository: nginx
#  pullPolicy: IfNotPresent
#  # Overrides the image tag whose default is the chart appVersion.
#  tag: ""

imagePullSecrets: []
fullnameOverride: "featurehub"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 999

securityContext:
  runAsNonRoot: true
  runAsUser: 999
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
      []
      # - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

