#general
nats.enabled=false
dacha1.enabled=false
dacha2.enabled=true
cloudevents.pubsub.enabled=true
cloudevents.pubsub.project=featurehub
cloudevents.pubsub.min-backoff-delay-seconds=20

# start Google PubSub emulator config
# this is internal FeatureHub code that pre-creates these topics on the emulator, it shouldn't be used in production code
cloudevents.pubsub.local.host=pubsub:8075
cloudevents.pubsub.local.topics=featurehub-mr-dacha2,featurehub-mr-edge,featurehub-edge-updates,featurehub-stats,featurehub-enriched-events-webhooks,enriched-feature-data

# dacha2 and edge make their own subscribers
cloudevents.pubsub.local.sub-pairs=featurehub-edge-updates-mr-sub=featurehub-edge-updates,featurehub-enriched-events=featurehub-enriched-events-webhooks,enricher-updates-sub=featurehub-mr-edge
# end Google PubSub emulator config

cloudevents.enricher.pubsub.channels=webhooks
cloudevents.enricher.pubsub.channel.webhooks=featurehub-enriched-events-webhooks
# this is "dacha2" pubsub has to have a subscription to listen for the original feature update coming from MR, it can't use the original name
cloudevents.enricher.pubsub.subscription-name=enricher-updates-sub

# this is "edge" - listening to the cloudevents.enricher.channel-name
cloudevents.enricher.pubsub.enriched-subscription-name=featurehub-enriched-events

cloudevents.edge-mr.pubsub.topic-name=featurehub-edge-updates
cloudevents.mr-edge.pubsub.topic-name=featurehub-mr-edge
# featurehub must dynamically create subscribers for Edge and Dacha2 as PubSub is not actually... PubSub
cloudevents.mr-edge.pubsub.subscription-prefix=featurehub-edge-listener
cloudevents.stats.pubsub.topic-name=featurehub-stats
cloudevents.mr-dacha2.pubsub.topic-name=featurehub-mr-dacha2
cloudevents.mr-dacha2.pubsub.subscription-prefix=featurehub-dacha2-listener

# as they are env vars here, they have to be in upper case, but in "real AWS" they would not be used
#ensure monitoring ports are off so we have only 1 external port, knative generally does not like > 1 port
monitor.port=0

# edge
edge.sse.drop-after-seconds=60
update.pool-size=30
listen.pool-size=30

#mr
db.url=jdbc:postgresql://db:5432/featurehub
db.username=featurehub
db.password=featurehub
db.connections=10
run.nginx=true
jersey.cors.headers=X-Requested-With,Authorization,Content-type,Accept-Version,Content-MD5,CSRF-Token,x-ijt,cache-control,Baggage
jersey.logging.exclude-entirely-uris=/health/liveness,/health/readiness,/metrics
portfolio.admin.group.suffix=Administrators
#matches the outbound name in edge-config
cloudevents.inbound.channel-names=featurehub-edge-updates-mr-sub
